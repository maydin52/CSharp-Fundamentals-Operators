Operatorler...
  Programlama dillerinde, bazý sembol veya keywordler atanmýþ olan iþlemlerdir...
  
  Operand: bir operatorun saðýnda yada solunda olan ifadeler...
  a==b  4==4
  //1 operandlý op. i++
  //2 operandlý op. 3==2 
  //3 operandlý op. ? :
  
  //3 operandlı operator kullanımı
//En kısa sart cumlesi...
Console.WriteLine(5 == 5 ? "esit" : "esit degil");

if(false)
    Console.WriteLine("true ise calis");

int sayi = 12;
  

  Aritmetik op. + , - , / , * , i++ , i--, --i, ++i
  Atama Op. =, += , -=, *=, /=
  Mantýksal Op. !(NOT) , &&(VE) , ||(VEYA)
  Karþýlaþtýrma Op. ==, <= ,>=, !=, >, <
  *** Karþýlaþtýrma op. geriye bool tipinde deger dondurur...
  
  //XOR Bitsel op...
Console.WriteLine(7^2); //5
Console.WriteLine(7^3); //4

//0 0 0
//0 1 1
//1 0 1
//1 1 0

//111 4+2+1 =7
//010 2 
//101 => 4+1 =5

//111 4+2+1 =7
//011 3
//100 =>4
  
  
  //Soru 1:Kullanıcı tarafından girilen bir tam sayının tek veya cift olduğunu bulan kodu yazınız?

//int sayi;
Console.WriteLine("Bir sayı giriniz?");
int sayi = Convert.ToInt32(Console.ReadLine());

if (sayi % 2 == 1)
    Console.WriteLine("Sayı Tektir...");
else
    Console.WriteLine("Sayi Cifttir");

int i = 10;
//i++ => i=i+1
//Once islem, sonra artır...

//++i =>Once artır, sonra islem...
Console.WriteLine(i++);
Console.ReadLine();
Console.WriteLine(i);
Console.ReadLine();
Console.WriteLine(++i);

Console.WriteLine(3==3);
Console.WriteLine(3!=3);
Console.WriteLine(3==4);
Console.WriteLine(3<3);
Console.WriteLine(3>3);

-------------------------------------------------------------------
Nullable operatörü

int? sID = null;

//int kID = null;

-------------------------------------------------------------------

Console.WriteLine(!true);

Console.WriteLine(!false);

-------------------------------------------------------------------

      //Karsılastırma Operatörleri
      //1-) == (karsılıklı iki değerin birbiriyle esit olması durumu)
      //2-) != (karsılıklı iki degerin birbirlerine esit olmaması durumu)
      //3-) < (soldaki degerin sagdaki degerden kucuk olması durumu)
      //4-) > (soldaki degerin sagdaki degerden buyuk olması durumu)
      //5-) <= (soldaki degerin sagdaki degere esit yada kucuk olması durumu)
      //6-) >= (soldaki degerin sagdaki degere esit yada buyuk olması durumu.)

      //Mantıksal Operatörler
      // Birden fazla durumun aynı anda kontrol edilmesi gibi senaryolarda kullanılan operatör.
      // && (ve) (Kontrol blogu içerisinde yer alan tüm kosulların saglanması durumunu işaret eder. kosullardan biri dahi saglamıyorsa bloku harekete gecirmez.)
      // || (veya) (kontrol blogu içerisinde yer alan kosullardan her hangi birinin saglanması durumunu işaret ederi. bir kosul saglansa bile blogumuz harakete geçerr. )
      // & ve
      // | veya
